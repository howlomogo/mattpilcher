{"version":3,"sources":["actions/userActions.js","containers/About.js","functions/getUsers.js","components/Header.js","actions/loginActions.js","components/ListItem.js","containers/List.js","containers/SignUp.js","containers/Login.js","components/Friends.js","components/Comments.js","actions/commentAction.js","functions/friendCheck.js","containers/Profile.js","components/DevBar.js","containers/App.js","reducers/index.js","reducers/userReducer.js","reducers/loginReducer.js","reducers/commentReducer.js","store.js","localStorage.js","index.js"],"names":["userDelete","user","dispatch","type","payload","userId","userUpdate","id","fullname","age","home","newDetails","handleFriendRequest","userToAccept","userAccepting","isAccepted","About","Component","getUser","users","find","Number","Header","this","props","list","activeUser","friendreq","undefined","map","req","friend","className","key","Link","to","src","image","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","style","verticalAlign","backgroundImage","borderRadius","backgroundSize","backgroundPosition","paddingTop","width","username","loggedIn","OverlayTrigger","trigger","placement","overlay","Popover","Title","as","Content","length","Fragment","href","connect","store","ListItem","quickLogin","bind","height","userIdToSendReq","activeUserId","List","handleInputChange","state","searchTerm","filteredList","e","updatedList","filter","item","toLowerCase","includes","target","value","setState","userList","onChange","SignUp","password","handleSubmit","name","preventDefault","friends","onSubmit","Login","Friends","logstuff","console","log","userFriends","i","userProfile","j","push","activeUserProfile","user1","user2","Comments","showInput","commentText","profileId","posterId","comment","id1","id2","areFriends","userComments","comments","posts","post","postedBy","poster","canDeleteComment","lass","class","borderTopLeftRadius","borderBottomLeftRadius","commentId","addCommentSection","reverse","Profile","match","params","inputValues","handleFormChange","userExists","borderTopRightRadius","isEditingProfile","htmlFor","placeholder","DevBar","localStorage","removeItem","showProps","clearStorage","App","BrowserRouter","Route","exact","path","component","router","combineReducers","action","highestIndex","Math","max","apply","newUser","Object","assign","origUserList","updatedUserList","reduce","acc","updatedUser","newFriendReqs","index","indexOf","splice","checkIfReqExists","request","checkIfAlreadyFriend","newList","userToSendReq","some","concat","userSent","indexAccept","indexSent","index1","index2","profile","profileCopy","floor","random","newState","obj","origCommentsArray","updatedCommentsArray","updatedObj","persistedState","serializedState","getItem","JSON","parse","err","loadState","createStore","reducer","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.442da186.chunk.js","sourcesContent":["export function userAdd(user) {\n  return {\n    type: 'USER_ADD',\n    payload: user\n  }\n}\n\nexport function userDelete(user) {\n  return function(dispatch) {\n    dispatch({\n      type: 'USER_DELETE',\n      payload: {\n        userId: user\n      }\n    });\n    dispatch({\n      type: 'LOG_OUT'\n    });\n  }\n}\n\nexport function userUpdate(id, fullname, age, home) {\n  return {\n    type: 'USER_UPDATE',\n    payload: {\n      id,\n      newDetails: {\n        age,\n        fullname,\n        home\n      }\n    }\n  }\n}\n\n// May want to break up friends into seperate state as opposed to keeping friends in users list\nexport function sendFriendRequest(userIdToSendReq, activeUserId) {\n  return {\n    type: 'SEND_FRIEND_REQUEST',\n    payload: {\n      userIdToSendReq,\n      activeUserId\n    }\n  }\n}\n\nexport function handleFriendRequest(userToAccept, userAccepting, isAccepted) {\n  return {\n    type: 'HANDLE_FRIEND_REQUEST',\n    payload: {\n      userToAccept,\n      userAccepting,\n      isAccepted\n    }\n  }\n}\n\nexport function removeFriend(user1, user2) {\n  return {\n    type: 'REMOVE_FRIEND',\n    payload: {\n      user1,\n      user2,\n    }\n  }\n}\n","// Dumb Component\nimport React, { Component } from 'react';\n\n\nclass About extends Component {\n\n  render() {\n\n    return (\n      <div>\n        <h5>A very basic social networking site, using game of thrones characters</h5>\n        <hr />\n        <ul>\n          <li>You can log in as any of the characters or create your own users, search for users</li>\n          <li>You can Add friends with one characters and log in as the added person to add that friend</li>\n          <li>You can comment on walls, delete friends and remove comments you have added</li>\n          <li>All data is stored to local storage and can be reset with the \"clear Storage\" button to start again</li>\n          <li>List if friend already added or request already sent</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default About;\n","// Retrieve a single user from the id passed in\n// Pass in the list of users and the id of the user you want to returned\nexport function getUser(users, userId) {\n  const user = users.find((user) => {\n    return user.id === Number(userId);\n  });\n  return user;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\n// Actions\nimport { userLogout } from './../actions/loginActions';\nimport  { handleFriendRequest } from './../actions/userActions';\n\n// function\nimport { getUser } from './../functions/getUsers';\n\nfunction mapStateToProps(store) {\n  return {\n    activeUser: store.activeUser,\n    list: store.users.list\n  }\n}\n\nclass Header extends Component {\n\n  render() {\n    const user = getUser(this.props.list, this.props.activeUser.userId);\n    let friendreq = [];\n    if(user !== undefined) {\n      friendreq = user.friendreq.map((req) => {\n        const friend = getUser(this.props.list, req);\n        return (\n          <div className='text-center' key={req}>\n            <Link className='mb-2 d-block' to={`/profile/${friend.id}`}>\n              <img src={friend.image} className='nav-profile-img mr-1' />\n              <span className='d-inline-block'>{friend.fullname}</span>\n            </Link>\n            <button onClick={() => this.props.dispatch(handleFriendRequest(req, this.props.activeUser.userId, true))} className='btn btn-success btn-sm mr-2'>Accept</button>\n            <button onClick={() => this.props.dispatch(handleFriendRequest(req, this.props.activeUser.userId, false))} className='btn btn-danger btn-sm'>Nope</button>\n            <hr />\n          </div>\n        )\n      });\n    }\n\n    return (\n        <nav className='mb-4 navbar navbar-expand-lg navbar-dark bg-dark'>\n          <Link to='/' className='navbar-brand'>Game of Social Networking</Link>\n          <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarNavAltMarkup' aria-controls='navbarNavAltMarkup' aria-expanded='false' aria-label='Toggle navigation'>\n            <span className='navbar-toggler-icon'></span>\n          </button>\n          <div className='collapse navbar-collapse' id='navbarNavAltMarkup'>\n            <div className='navbar-nav'>\n              <Link to='/about' className='nav-item nav-link mr-2'>About</Link>\n              <Link to='/' className='nav-item nav-link mr-2'>List Users</Link>\n              { this.props.activeUser.userId &&\n                <Link className='nav-link nav-item' to={`/profile/${this.props.activeUser.userId}`}>\n                  <div className='mr-1 d-inline-block' style={{verticalAlign: 'middle',backgroundImage:`url(${user.image})`, borderRadius: '50%', backgroundSize: 'cover', backgroundPosition: 'center top', paddingTop: '25px', width: '25px'}} />\n                  <span>{user.username}</span>\n                </Link>\n              }\n            </div>\n            <div className='navbar-nav ml-auto'>\n              {this.props.activeUser.loggedIn &&\n                <div className='navbar-item mr-2'>\n                  <OverlayTrigger trigger='click' placement='bottom' overlay={\n                    <Popover id='popover-basic'>\n                      <Popover.Title as='h3'>Friend Requests</Popover.Title>\n                      <Popover.Content>\n                        {friendreq.length > 0 ? (\n                          <React.Fragment>\n                          {friendreq}\n                          </React.Fragment>\n                        ) : (\n                          <React.Fragment>\n                            No new users have added you :-(\n                          </React.Fragment>\n                        )}\n                      </Popover.Content>\n                    </Popover>\n                  }>\n                    <div>\n                      <i type='button' className='fa fa-users mt-2'></i>\n                      {friendreq.length > 0 &&\n                        <div className='ml-1 badge badge-danger'>{friendreq.length}</div>\n                      }\n                    </div>\n                  </OverlayTrigger>\n                </div>\n              }\n\n\n\n\n              {this.props.activeUser.loggedIn ? (\n                <div className='nav-item'>\n                  <button className='btn btn-default' onClick={() => this.props.dispatch(userLogout())}>Log Out</button>\n                </div>\n              ) : (\n                <React.Fragment>\n                  <Link to='/login' className='nav-item nav-link' href='#'>Log In</Link>\n                  <Link to='/signup' className='nav-item nav-link' href='#'>Sign Up</Link>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        </nav>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","export function userLogin(username, password, list) {\n  return {\n    type: 'LOG_IN',\n    payload: {\n      username,\n      password,\n      list\n    }\n  }\n}\n\nexport function userLogout() {\n  return {\n    type: 'LOG_OUT'\n  }\n}\n\nexport function toggleProfileEditing() {\n  return {\n    type: 'TOGGLE_PROFILE_EDITING'\n  }\n}\n\nexport function quickLogIn(id, list) {\n  return {\n    type: 'QUICK_LOG_IN',\n    payload: {\n      id,\n      list\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Actions\nimport { sendFriendRequest } from './../actions/userActions';\nimport { quickLogIn } from './../actions/loginActions';\nimport { userLogout } from './../actions/loginActions';\n\nfunction mapStateToProps(store) {\n  return {\n    activeUser: store.activeUser,\n    list: store.users.list\n  }\n}\n\n\nclass ListItem extends Component{\n  constructor(props) {\n    super()\n\n    this.quickLogin = this.quickLogin.bind(this)\n  }\n\n  quickLogin() {\n    this.props.dispatch(userLogout())\n    this.props.dispatch(quickLogIn(this.props.user.id, this.props.list))\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-md-6'>\n            <div style={{borderRadius: '50%', backgroundImage:`url(${this.props.user.image})`, backgroundSize: 'cover', backgroundPosition: 'center top', height: '160px', width: '160px'}} className='d-inline-block mr-4' />\n\n            <div style={{verticalAlign: 'top'}} className='d-inline-block'>\n              <h5 className='d-block'>\n                Name: {this.props.user.fullname}\n              </h5>\n\n              <h5 className='d-block'>\n                Username: {this.props.user.username}\n              </h5>\n            </div>\n\n\n          </div>\n          <div className='col-md-6'>\n            <Link to={`/profile/${this.props.user.id}`}>\n              <button className='btn btn-primary u-inline-block mr-2 mb-2'>\n                View User Profile\n              </button>\n            </Link>\n\n            {/* Must be logged in to add friend */}\n            {this.props.activeUser.loggedIn &&\n              <React.Fragment>\n                <button className='btn btn-success d-inline-block mb-2' onClick={() => this.props.dispatch(sendFriendRequest(this.props.user.id, this.props.activeUser.userId))}>\n                  Add Friend\n                </button>\n                <p className='small'>(You will need to log into this users account to accept the friend request to be friends)</p>\n              </React.Fragment>\n            }\n\n            {/* Just put quick log in here, to save writing details everytime */}\n            <button\n              className='btn btn-secondary mb-1 d-block'\n              onClick={() => this.quickLogin()}>\n              Quick log in as this user\n            </button>\n            <p className='small'>(Will be logged out of anyone currently logged in)</p>\n          </div>\n        </div>\n\n        <div>\n          {/* Move this to users page / create an edit user page  */}\n          {/* <EditUser user={this.props.user} userUpdate={this.props.userUpdate} /> */}\n          <hr />\n        </div>\n      </div>\n    )\n  }\n}\nexport default connect(mapStateToProps)(ListItem);\n","// Dumb Component\nimport React, { Component } from 'react';\nimport ListItem from './../components/ListItem';\n\nclass List extends Component {\n  constructor(props){\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      searchTerm: '',\n      filteredList: this.props.list\n    }\n  }\n\n  handleInputChange(e) {\n    let updatedList = this.props.list;\n\n    updatedList = updatedList.filter(function(item){\n      return item.fullname.toLowerCase().includes(e.target.value.toLowerCase()) || item.username.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    // Update the input changes\n    this.setState({\n      filteredList: updatedList,\n      searchTerm: e.target.value\n    });\n  }\n\n  render() {\n    const userList = this.state.filteredList.map((user) => {\n      return (\n        <ListItem\n          key={user.id}\n          user={user}\n          userUpdate={this.props.userUpdate}\n        />\n      )\n    });\n\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-md-6'>\n            <h4>User List</h4>\n          </div>\n          <div className='col-md-6'>\n            <form className='form-inline'>\n              <label>Search For User:</label>\n              <input\n                value={this.state.searchTerm}\n                onChange={this.handleInputChange}\n                className='form-control'\n                type='text'/>\n            </form>\n          </div>\n        </div>\n        <hr />\n        <div>\n          {userList}\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default List;\n","// Dumb Component\n// I will leave the state for handling input changes in here, there is no\n// need in moving it to redux as it only affects the form here.\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { userAdd } from './../actions/userActions';\n\nfunction mapStateToProps(store) {\n  return {\n    list: store.users.list\n  }\n}\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      fullname: '',\n      age: ''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    // Update the input changes\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.props.dispatch(\n      userAdd({\n        username: this.state.username,\n        password: this.state.password,\n        fullname: this.state.fullname,\n        age: this.state.age,\n        friends: [],\n        friendreq: [],\n        image: 'http://s3.amazonaws.com/37assets/svn/765-default-avatar.png',\n        home: 'Earth'\n      }));\n\n    // Reset the inputs\n    this.setState({\n      username: '',\n      password: '',\n      fullname: '',\n      age: ''\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h4>Create A New User</h4>\n        <hr />\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-group'>\n            <label>Username</label>\n            <input\n              name='username'\n              value={this.state.username}\n              onChange={this.handleInputChange}\n              className='form-control'\n              type='text'/>\n          </div>\n          <div className='form-group'>\n            <label>Password</label>\n            <input\n              name='password'\n              value={this.state.password}\n              onChange={this.handleInputChange}\n              className='form-control'\n              type='text'/>\n          </div>\n          <div className='form-group'>\n            <label>Fullname</label>\n            <input\n              name='fullname'\n              value={this.state.fullname}\n              onChange={this.handleInputChange}\n              className='form-control'\n              type='text'/>\n          </div>\n          <div className='form-group'>\n            <label>Age</label>\n            <input\n              name='age'\n              value={this.state.age}\n              onChange={this.handleInputChange}\n              className='form-control'\n              type='text'/>\n          </div>\n          <input\n            type='submit'\n            value='Sign Up'\n            className='btn btn-success'\n          />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(SignUp);\n","// Dumb Component\nimport React, { Component } from 'react';\nimport { userLogin } from './../actions/loginActions';\nimport { connect } from 'react-redux';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: ''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    // Update the input changes\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.dispatch(userLogin(this.state.username, this.state.password, this.props.list));\n\n    // Reset the inputs\n    this.setState({\n      username: '',\n      password: ''\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n        {\n          this.props.loggedIn ? (\n            <h3>Already Logged In</h3>\n          ) : (\n            <div>\n              <h4>Log In</h4>\n              <hr />\n              <form className='form-inline' onSubmit={this.handleSubmit}>\n                <div className='form-group'>\n                  <label>Username</label>\n                  <input\n                    name='username'\n                    value={this.state.username}\n                    onChange={this.handleInputChange}\n                    className='form-control'\n                    type='text'/>\n                </div>\n\n                <div className='form-group'>\n                  <label>Password</label>\n                  <input\n                    name='password'\n                    value={this.state.password}\n                    onChange={this.handleInputChange}\n                    className='form-control'\n                    type='text'/>\n                </div>\n                <input\n                  type='submit'\n                  value='Log In'\n                  className='btn btn-success'\n                />\n              </form>\n              <p className='small d-block mt-1 font-italic'>(Note: ALL existing user passwords are 'password')</p>\n              <hr/>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    list: store.users.list,\n    loggedIn: store.activeUser.loggedIn\n  }\n}\n\n// By passing nothing to connect it still gives access to dispatch as a prop, which is useful in this case, I do not need mapstatetoprops here.\nexport default connect(mapStateToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// Actions\nimport { removeFriend } from './../actions/userActions';\n\nfunction mapStateToProps(store) {\n  return {\n    list: store.users.list\n  }\n}\n\nclass Friends extends Component {\n\n  constructor() {\n    super();\n    this.logstuff = this.logstuff.bind(this);\n  }\n\n  logstuff() {\n    console.log(this.props);\n  }\n\n  render() {\n    // Get the users friends by id and put them into userFriends as whole objects so can use friend data eg profile image etc\n    let userFriends = [];\n\n    for(let i = 0; i < this.props.userProfile.friends.length; i++) {\n      for(let j= 0; j < this.props.list.length; j++) {\n        if(this.props.userProfile.friends[i] === this.props.list[j].id) {\n          userFriends.push(this.props.list[j]);\n        }\n      }\n    }\n\n    const friends = userFriends.map((user) => {\n      return (\n        <div style={{width: '180px'}} className='card d-inline-block mr-3 mb-3'>\n          <Link to={`/profile/${user.id}`}>\n            <div style={{backgroundImage:`url(${user.image})`, backgroundSize: 'cover', backgroundPosition: 'center top', paddingTop: '100%', width: '100%'}} className='card-img-top' />\n\n            <div className='p-2'>\n              <h6 className='card-title mb-0'>{user.fullname}</h6>\n            </div>\n          </Link>\n          {this.props.activeUserProfile &&\n            <button onClick={() => this.props.dispatch(removeFriend(user.id, this.props.userProfile.id))} className='btn btn-danger profile-friend--delete'>Delete Friend</button>\n          }\n        </div>\n      )\n    });\n\n    return (\n      <div>\n        <h4 onClick={this.logstuff}>Friends</h4>\n        {friends}\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Friends);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Singular Functions\nimport { isFriend } from './../functions/friendCheck';\nimport { getUser } from './../functions/getUsers';\n\n// Actions\nimport { addComment } from './../actions/commentAction';\nimport { deleteComment } from './../actions/commentAction';\n\nfunction mapStateToProps(store) {\n  return {\n    list: store.users.list,\n    comments: store.comments,\n    activeUser: store.activeUser\n  }\n}\n\nclass Comments extends Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      showInput: true,\n      commentText: ''\n    }\n  }\n\n  handleInputChange(e) {\n    // Update the input changes\n    this.setState({\n      commentText: e.target.value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.props.dispatch(addComment(\n      this.props.userProfile.id,\n      this.props.activeUser.userId,\n      this.state.commentText\n    ))\n\n    // Reset the inputs\n    this.setState({\n      commentText: ''\n    })\n  }\n\n  render() {\n    let areFriends = false;\n    // Allow comments to be added if users are friends\n    if(this.props.activeUser.userId !== undefined) {\n      areFriends = isFriend(this.props.userProfile.id, this.props.activeUser.userId, this.props.list);\n    }\n\n    // Get comments for current profile\n    let userComments = {};\n\n    userComments = this.props.comments.find((comment) => {\n      return comment.user === Number(this.props.userProfile.id);\n    });\n\n    let comments = [];\n    // Build Comment Section. This could potentially be broken up further\n    if(userComments !== undefined) {\n      comments = userComments.posts.map((post) => {\n        const postedBy = getUser(this.props.list, post.poster);\n        // Can delete comment if its on your profile, or you posted the comment on another profile\n        let canDeleteComment = false;\n\n        if((this.props.activeUser.userId === this.props.userProfile.id) || (this.props.activeUser.userId === post.poster)) {\n          canDeleteComment = true;\n        }\n\n        return (\n          <div key={post.id} lass='container-fluid'>\n            <div class='row'>\n              <div class='col-12 mt-3'>\n                <div class='card'>\n                  <div class='card-horizontal'>\n                    <div class='comment-img-wrapper'>\n                      <div style={{backgroundImage: postedBy !== undefined ? `url(${postedBy.image})` : 'url(https://www.festivalclaca.cat/imgfv/b/72-722963_circular-question-mark-button-question-mark-icon-white.png)', backgroundSize: 'cover', backgroundPosition: 'center top', paddingTop: '100%', width: '100%', borderTopLeftRadius:'0.25rem', borderBottomLeftRadius: '0.25rem'}} />\n                    </div>\n                    <div class='card-body'>\n                      <h5 class='card-title text-muted'>\n                        Posted By:&nbsp;\n                        {postedBy !== undefined ? postedBy.fullname : 'User Deleted'}\n                      </h5>\n                      <p class='card-text'>\n                        {post.post}\n                      </p>\n                      { canDeleteComment === true &&\n                        <button\n                          onClick={() => this.props.dispatch(deleteComment(post.id))}\n                          className='btn btn-danger'>\n                          Delete Comment\n                        </button>\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n        )\n      });\n    }\n\n    let addCommentSection = null;\n\n    if(this.props.activeUser.userId === undefined) {\n      addCommentSection = <h4>Sign in to add a comment</h4>;\n    }\n    else if((!areFriends) && (this.props.activeUser.userId !== this.props.userProfile.id)) {\n      addCommentSection = <h5>You need to be friends to add a comment</h5>;\n    }\n    else {\n      addCommentSection =\n      <form onSubmit={this.handleSubmit}>\n        <textarea\n          value={this.state.commentText}\n          onChange={this.handleInputChange}\n          className='comments-add-textarea form-control mb-1' />\n\n        <button type='submit' className='btn btn-primary u-inline-block mr-2'>Add Comment</button>\n      </form>\n    }\n\n\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-md-6'>\n            <h4>Comments</h4>\n          </div>\n          <div className='col-md-6'>\n            { addCommentSection }\n          </div>\n        </div>\n        <hr />\n        { comments.length > 0 ? (\n            comments.reverse()\n          ) : (\n            <h4>No Comments</h4>\n          )\n        }\n      </div>\n    )\n  }\n}\n\n// By passing nothing to connect it still gives access to dispatch as a prop, which is useful in this case, I do not need mapstatetoprops here.\nexport default connect(mapStateToProps)(Comments);\n","// Profile of user wall to add comment / user posting the comment / users list\nexport function addComment(profileId, posterId, comment) {\n  return {\n    type: 'ADD_COMMENT',\n    payload: {\n      profileId,\n      posterId,\n      comment\n    }\n  }\n}\n\nexport function deleteComment(commentId) {\n  return {\n    type: 'DELETE_COMMENT',\n    payload: {\n      commentId\n    }\n  }\n}\n","// Check whether two users are friends\n// id1 (profile)- id2(activeuser) - users list\nexport function isFriend(id1, id2, users) {\n  // Find users\n  const user1 = users.find((user) => {\n    return user.id === Number(id1);\n  });\n\n  const isFriend = user1.friends.find((friend) => {\n    if(friend === Number(id2)) {\n      return true;\n    }\n    return false;\n  });\n\n  if(isFriend) {\n    return true;\n  }\n  return false;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Components\nimport Friends from './../components/Friends';\nimport Comments from './../components/Comments';\n\n// Actions\nimport { userDelete } from './../actions/userActions';\nimport { userUpdate } from './../actions/userActions';\nimport { toggleProfileEditing } from './../actions/loginActions';\n\n// function\nimport { getUser } from './../functions/getUsers';\n\nfunction mapStateToProps(store) {\n  return {\n    list: store.users.list,\n    activeUser: store.activeUser\n  }\n}\n\nclass Profile extends Component {\n  constructor(props) {\n    super()\n\n    const userProfile = getUser(props.list, props.match.params.id)\n    this.state = {\n      inputValues: {\n        name: userProfile.fullname,\n        age: userProfile.age,\n        home: userProfile.home\n      }\n    }\n    this.handleFormChange = this.handleFormChange.bind(this)\n  }\n\n  handleFormChange(e) {\n    this.setState({\n      inputValues: {\n        ...this.state.inputValues,\n        [e.target.id]: (e.target.id === 'age') ? Number(e.target.value) : e.target.value\n      }\n    })\n  }\n\n  render() {\n    // Is there a user with this id stored?\n    const userProfile = getUser(this.props.list, this.props.match.params.id);\n\n    const userExists = userProfile !== undefined;\n    let activeUserProfile = false;\n\n    // Determind whether or not this is the currently logged in user.\n    // This allows for profile editing and deletion IF the user is currently logged in and on their profile page.\n    if(userExists) {\n      activeUserProfile = userProfile.id === this.props.activeUser.userId;\n    }\n\n    // These could be broken up into seperarate comps, not found / profile page\n    return (\n      <div>\n        {\n          userExists ? (\n            <div>\n              <div className='row'>\n                <div className='col-md-5'>\n                  <div style={{backgroundImage:`url(${userProfile.image})`, backgroundSize: 'cover', backgroundPosition: 'center top', paddingTop: '100%', width: '100%'}} />\n                  {activeUserProfile &&\n                    <div>\n                      <button\n                        className='btn btn-danger btn-block u-inline-block mr-2'\n                        style={{borderTopLeftRadius: '0px', borderTopRightRadius: '0px'}}\n                        onClick={() => this.props.dispatch(userDelete(this.props.activeUser.userId))}>\n                        Delete Your (Whole) Profile\n                      </button>\n                    </div>\n                  }\n                </div>\n                <div className='col-md-7'>\n\n                  {this.props.activeUser.isEditingProfile ? (\n                    <form>\n                      <div className='form-group'>\n                        <label htmlFor='nameInput'>Name</label>\n                        <input\n                          type='text'\n                          className='form-control'\n                          id='name'\n                          value={this.state.inputValues.name}\n                          onChange={this.handleFormChange}\n                          placeholder='Name' />\n                      </div>\n\n                      <div className='form-group'>\n                        <label htmlFor='nameInput'>Age</label>\n                        <input\n                          type='text'\n                          className='form-control'\n                          id='age'\n                          value={this.state.inputValues.age}\n                          onChange={this.handleFormChange}\n                          placeholder='Age' />\n                      </div>\n\n                      <div className='form-group'>\n                        <label htmlFor='nameInput'>Home</label>\n                        <input\n                          type='text'\n                          className='form-control'\n                          id='home'\n                          value={this.state.inputValues.home}\n                          onChange={this.handleFormChange}\n                          placeholder='Home' />\n                      </div>\n\n                      <button\n                        type='submit'\n                        className='btn btn-primary my-1'\n                        onClick={(e) => {\n                          e.preventDefault()\n                          this.props.dispatch(userUpdate(this.props.activeUser.userId, this.state.inputValues.name, this.state.inputValues.age, this.state.inputValues.home))\n                          this.props.dispatch(toggleProfileEditing())\n                        }}\n                      >\n                        Update Details\n                      </button>\n                    </form>\n                  ) : (\n                    <React.Fragment>\n                      <h5>Name: {userProfile.fullname}</h5>\n                      <h5>Age: {userProfile.age}</h5>\n                      <h5>Home: {userProfile.home}</h5>\n                    </React.Fragment>\n                  )}\n\n                  <hr />\n                  {activeUserProfile &&\n                    <React.Fragment>\n                      <button\n                        className='btn btn-primary u-inline-block'\n                        onClick={() => this.props.dispatch(toggleProfileEditing())}>\n                        {this.props.activeUser.isEditingProfile ? (\n                          <span>Cancel Editing</span>\n                        ) : (\n                          <span>Edit Profile</span>\n                        )}\n                      </button>\n                      <hr />\n                    </React.Fragment>\n                  }\n                  <Friends\n                    userProfile={userProfile}\n                    activeUserProfile={activeUserProfile}\n                  />\n                </div>\n              </div>\n              <hr/>\n              <div className='row'>\n                <div className='col-md-12'>\n                  <Comments\n                    userProfile={userProfile}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : (\n            <h1>No User Found</h1>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Profile);\n","// Debugging commands\nimport React, { Component } from 'react';\n\nclass DevBar extends Component {\n\n  clearStorage() {\n    localStorage.removeItem('socialReduxState');\n  }\n\n  showProps() {\n    console.log(this.props.props);\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <button className='btn btn-primary mr-2' onClick={this.showProps.bind(this)}>\n          Show Props\n        </button>\n        <button className='btn btn-danger mr-2' onClick={this.clearStorage.bind(this)}>\n          Clear Local Storage to restart app data\n        </button>\n        <hr />\n      </div>\n    )\n  }\n}\n\n// By passing nothing to connect it still gives access to dispatch as a prop, which is useful in this case, I do not need mapstatetoprops here.\nexport default DevBar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n// Actions\nimport { userDelete, userUpdate } from './../actions/userActions';\n\n// Components\nimport About from './../containers/About';\nimport Header from './../components/Header';\nimport List from './../containers/List';\nimport SignUp from './../containers/SignUp';\nimport Login from './../containers/Login';\nimport Profile from './../containers/Profile';\nimport DevBar from './../components/DevBar';\n\n\nimport './App.css';\n\nfunction mapStateToProps(store) {\n  return {\n    router: store.router,\n    activeUser: store.activeUser,\n    list: store.users.list,\n    comments: store.comments\n  }\n}\n\nclass App extends Component {\n\n  // These can potentially be moved out and instead change to using mapDispatchToProps for easier import.\n  userUpdate(id, fullname, age) {\n    this.props.dispatch(userUpdate(id, fullname, age));\n  }\n\n  userDelete(user) {\n    this.props.dispatch(userDelete(user));\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <Header />\n          <div className='container'>\n            <Route exact path='/about' component={About} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/login' component={Login}/>\n            <Route exact path='/' component={() => {\n              return (\n                <List\n                  list={this.props.list}\n                  userUpdate={this.userUpdate.bind(this)}\n                  userDelete={this.userDelete.bind(this)}\n                />\n              )\n            }}/>\n\n            { /* Pass in the react-router-dom props via props. Gives access to .match so I can search user id --- TODO - The other routes should use this method also.*/}\n            <Route path='/profile/:id' component={Profile} />\n            <DevBar props={this.props}/>\n          </div>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\n\n// import reducers\nimport users from './userReducer';\nimport activeUser from './loginReducer';\nimport comments from './commentReducer';\nexport default combineReducers({\n  users,\n  activeUser,\n  comments\n})\n","// Potentially worth breaking user list up.\n// Hard to split up as the friend arrays / comment arrays are within the user list.\n// Would it be better to have friends / comments as seperate states?\n\nexport default function reducer(\n  state = {\n    list: [\n      {\n        id: 1,\n        username: 'nstark',\n        password: 'password',\n        fullname: 'Ned Stark',\n        age: 40,\n        image: 'https://vignette.wikia.nocookie.net/gameofthrones/images/3/34/Eddard_Stark.jpg/revision/latest/top-crop/width/360/height/360?cb=20190701140812',\n        friends: [3, 4],\n        friendreq: [],\n        home: 'Winterfell'\n      },\n      {\n        id: 2,\n        username: 'thehound',\n        password: 'password',\n        fullname: 'Sandor Clegane',\n        age: 38,\n        image: 'https://upload.wikimedia.org/wikipedia/en/5/59/The_Hound_in_%27The_Children%27.jpg',\n        friends: [3, 4],\n        friendreq: [],\n        home: \"Clegane's Keep\"\n      },\n      {\n        id: 3,\n        username: 'jonsnow',\n        password: 'password',\n        fullname: 'Jon Snow',\n        age: 25,\n        image: 'https://www.thesun.co.uk/wp-content/uploads/2017/05/jon-snow-and-the-nights-watch-e1494021230137.jpg?strip=all&w=960',\n        friends: [1,2,4,8,9],\n        friendreq: [],\n        home: 'Winterfell'\n      },\n      {\n        id: 4,\n        username: 'astark',\n        password: 'password',\n        fullname: 'Arya Stark',\n        age: 17,\n        image: 'http://img.wennermedia.com/920-width/rehost2f20162f92f132-14e00cfc-8e11-467f-90b2-cf60f7461f9a.jpg',\n        friends: [1,2,3,9],\n        friendreq: [],\n        home: 'Winterfell'\n      },\n      {\n        id: 5,\n        username: 'clannister',\n        password: 'password',\n        fullname: 'Cersei Lannister',\n        age: 37,\n        image: 'https://i.pinimg.com/originals/e7/41/66/e74166adb8d99e0002fd0ee805c987c6.jpg',\n        friends: [7],\n        friendreq: [6],\n        home: \"Kings Landing\"\n      },\n      {\n        id: 6,\n        username: 'littlefinger',\n        password: 'password',\n        fullname: 'Petyr Baelish',\n        age: 40,\n        image: 'https://typeset-beta.imgix.net/2016/5/3/littlefinger-helen-sloan-hbo-f51b470f-8cfa-4b20-9055-e102c7df85de.jpeg?w=800&h=800&auto=format&fm=jpg&q=70&fit=crop&crop=faces',\n        friends: [],\n        friendreq: [],\n        home: 'The Vale'\n      },\n      {\n        id: 7,\n        username: 'jdog',\n        password: 'password',\n        fullname: 'Joffrey Baratheon',\n        age: 17,\n        image: 'https://a1cf74336522e87f135f-2f21ace9a6cf0052456644b80fa06d4f.ssl.cf2.rackcdn.com/images/characters_opt/p-game-of-thrones-jack-gleeson.jpg',\n        friends: [5],\n        friendreq: [],\n        home: \"Kings Landing\"\n      },\n      {\n        id: 8,\n        username: 'dragongirl',\n        password: 'password',\n        fullname: 'Daenerys Targaryen',\n        age: 23,\n        image: 'https://meanjin.com.au/wp-content/uploads/2019/05/Screen-Shot-2019-05-15-at-12.41.06-pm.png',\n        friends: [3],\n        friendreq: [],\n        home: \"Dragonstone\"\n      },\n      {\n        id: 9,\n        username: 'xcercisucksx',\n        password: 'password',\n        fullname: 'Tyrion Lannister',\n        age: 35,\n        image: 'https://media.gq.com/photos/599eeb4460e09b56c787029d/master/pass/tyrion_tout-2.jpg',\n        friends: [4,3],\n        friendreq: [],\n        home: \"Kings Landing\"\n      }\n    ]\n  }, action) {\n    switch(action.type) {\n      case 'USER_ADD': {\n        // Set new user id as +1 of the highest id (Would be done by DB)\n        const highestIndex = Math.max.apply(Math, state.list.map((user) => {\n          return user.id;\n        }));\n\n        // Create a newUser Object with the payload and adding the new id\n        const newUser = Object.assign(action.payload, {id: highestIndex + 1})\n\n        // Add the new user to the list\n        return {\n          ...state,\n          list: [\n            ...state.list, newUser\n          ]\n        }\n      }\n\n      // Create a new array from list, that doesn't include the user to delete\n\n      // TODO!!! - ALSO NEED TO DELETE ALL FREIEND REQUESTS FROM THAT USER\n      case 'USER_DELETE': {\n        const origUserList = state.list\n\n        const updatedUserList = origUserList.reduce((acc, user) => {\n          const updatedUser = user\n\n          if (user.id !== action.payload.userId) {\n            // if we arent deleting this user, we need to remove the user being delted from any friend requets\n            const newFriendReqs = user.friendreq;\n\n            const index = newFriendReqs.indexOf(action.payload.userId);\n            if (index > -1) {\n              newFriendReqs.splice(index, 1);\n            }\n\n            updatedUser.friendreq = newFriendReqs\n\n            acc.push(updatedUser)\n          }\n          return acc\n        }, [])\n\n        console.log('uul', updatedUserList)\n        return {\n          list: updatedUserList\n        }\n      }\n\n      // User Update, can only be updated if that user is logged in\n      case 'USER_UPDATE': {\n        const origUserList = state.list\n\n        const updatedUserList = origUserList.reduce((acc, user) => {\n          const isUserToAmend = user.id === action.payload.id\n\n          if (isUserToAmend) {\n            acc.push({\n              ...user,\n              ...action.payload.newDetails\n            })\n          } else {\n            acc.push(user)\n          }\n          return acc\n        }, [])\n\n        return {\n          ...state,\n          list: updatedUserList\n        }\n      }\n\n      // May want to break up friend and user state\n      // Add Friend\n      case 'SEND_FRIEND_REQUEST': {\n        // Create new list to be modified\n        let newList = [...state.list];\n\n        // Get the user that is being SENT the friend request\n        const userToSendReq = newList.find((user) => {\n          return user.id === action.payload.userIdToSendReq;\n        })\n\n\n        // Go through the users friend requests, to see if it has already been sent or not.\n        function checkIfReqExists(request) {\n          return request === action.payload.activeUserId;\n        }\n\n        function checkIfAlreadyFriend(request) {\n          return request === action.payload.activeUserId;\n        }\n\n        // If user to send request to isn't the user logged in\n        if(userToSendReq.id !== action.payload.activeUserId) {\n          // Check to see if friend request is still pending or not\n          if(!userToSendReq.friendreq.some(checkIfReqExists)) {\n            // Then check to see if they are friends already.\n            if(!userToSendReq.friends.some(checkIfAlreadyFriend)) {\n              userToSendReq.friendreq = userToSendReq.friendreq.concat(action.payload.activeUserId);\n            }\n            else {\n              console.log('Already friends')\n            }\n          }\n          else {\n            console.log('friend req already sent');\n          }\n        }\n        else {\n          console.log('Cant Add Yourself as a friend');\n        }\n\n        return {\n          ...state,\n          list: newList\n        }\n      }\n\n      // Handle friend request\n      // TODO - Refactor this\n      case 'HANDLE_FRIEND_REQUEST': {\n\n        // Create new list to be modified\n        let newList = [...state.list];\n\n        // Get the user that is accepting the friend request\n        const userAccepting = newList.find((user) => {\n          return user.id === action.payload.userAccepting;\n        })\n\n        // Get the user that sent the friend request\n        const userSent = newList.find((user) => {\n          return user.id === action.payload.userToAccept;\n        })\n\n        // If Rejected don't add to friends list\n        // Otherwise add friend to both users\n        if(action.payload.isAccepted) {\n          userAccepting.friends = userAccepting.friends.concat(action.payload.userToAccept);\n\n          userSent.friends = userSent.friends.concat(action.payload.userAccepting);\n        }\n\n        // Remove the friend from friendreq on both users\n        const indexAccept = userAccepting.friendreq.indexOf(action.payload.userToAccept);\n\n        if(indexAccept !== -1) {\n          userAccepting.friendreq.splice(indexAccept, 1);\n        }\n\n        const indexSent = userSent.friendreq.indexOf(action.payload.userAccepting);\n\n        if(indexSent !== -1) {\n          userSent.friendreq.splice(indexSent, 1);\n        }\n\n        return {\n          ...state,\n          list: newList\n        }\n      }\n\n      // Remove friend\n      case 'REMOVE_FRIEND': {\n        // Create new list to be modified\n        let newList = [...state.list];\n\n        // Get the user1 obj - user being deleted\n        const user1 = newList.find((user) => {\n          return user.id === action.payload.user1;\n        })\n\n        // Get the user2 obj - user profile\n        const user2 = newList.find((user) => {\n          return user.id === action.payload.user2;\n        })\n\n        // get position of user in to delete in friends array and remove it\n        const index1 = user1.friends.indexOf(action.payload.user2);\n        if(index1 !== -1) {\n          user1.friends.splice(index1, 1);\n        }\n\n        const index2 = user2.friends.indexOf(action.payload.user1);\n        if(index2 !== -1) {\n          user2.friends.splice(index2, 1);\n        }\n\n        return {\n          ...state,\n          list: newList\n        }\n      }\n\n    }\n  return state;\n}\n","export default function reducer(\n  state = {\n    loggedIn: false,\n    userId: undefined,\n    isEditingProfile: false\n  }, action) {\n    switch(action.type) {\n      case 'LOG_IN': {\n        // Check to see if the user exists with the correct password\n        const activeUser = action.payload.list.find((user) => {\n          return ((user.username === action.payload.username) && (user.password === action.payload.password));\n        })\n        if(activeUser === undefined) {\n          // If user log in failed return -1 (-1 means noone logged in)\n          return {\n            loggedIn: false,\n            userId: undefined\n          };\n        }\n        else {\n          return {\n            loggedIn: true,\n            userId: activeUser.id\n          }\n        }\n      }\n\n      // Log in through list page quickly\n      case 'QUICK_LOG_IN': {\n        // Check to see if the user exists\n        const activeUser = action.payload.list.find((user) => {\n          return user.id === action.payload.id;\n        })\n\n        if(activeUser === undefined) {\n          // If user log in failed return -1 (-1 means noone logged in)\n          return {\n            loggedIn: false,\n            userId: undefined\n          };\n        }\n        else {\n          return {\n            loggedIn: true,\n            userId: activeUser.id\n          }\n        }\n      }\n\n      case 'LOG_OUT': {\n        return {\n          loggedIn: false,\n          userId: undefined,\n          isEditingProfile: false\n        }\n      }\n\n      // Can just have in login reducer for now\n      case 'TOGGLE_PROFILE_EDITING': {\n        return {\n          ...state,\n          isEditingProfile: !state.isEditingProfile\n        }\n      }\n    }\n  return state;\n}\n","export default function reducer(\n  state = [\n      {\n        user: 4,\n        posts: [\n          {\n            id: 1000,\n            poster: 3,\n            post: \"The Dire Wolf Is The Sigil Of Your House. They Were Meant To Have Them.\"\n          },\n          {\n            id: 999,\n            poster: 3,\n            post: \"First Lesson, Stick 'Em With The Pointy End.\"\n          },\n          {\n            id: 998,\n            poster: 4,\n            post: \"Finally I've arrived at Braavos!\"\n          }\n        ]\n      },\n      {\n        user: 1,\n        posts: [\n          {\n            id: 997,\n            poster: 4,\n            post: \"Tell them the North remembers.\"\n          }\n        ]\n      },\n      {\n        user: 2,\n        posts: [\n          {\n            id: 996,\n            poster: 3,\n            post: \"We Can't Defend The North If Only Half The Population Is Fighting.\"\n          },\n          {\n            id: 995,\n            poster: 3,\n            post: \"I Swore A Vow... If I Don't Take My Own Words Seriously, What Sort Of Lord Of Winterfell Would I Be?\"\n          },\n          {\n            id: 994,\n            poster: 4,\n            post: 'Your on my list!!!'\n          }\n        ]\n      },\n      {\n        user: 5,\n        posts: [\n          {\n            id: 993,\n            poster: 7,\n            post: 'So you agree... The Starks are enemies?'\n          },\n          {\n            id: 992,\n            poster: 7,\n            post: \"I am the king! I will punish you.\"\n          }\n        ]\n      },\n      {\n        user: 7,\n        posts: [\n          {\n            id: 991,\n            poster: 5,\n            post: \"Everyone Who Isn't Us Is An Enemy.\"\n          }\n        ]\n      },\n      {\n        user: 3,\n        posts: [\n          {\n            id: 990,\n            poster: 9,\n            post: \"Never forget what you are, the rest of the world will not. Wear it like armor and it can never be used to hurt you.\"\n          }\n        ]\n      },\n  ], action) {\n    switch(action.type) {\n      case 'ADD_COMMENT': {\n        // Return the comments of the profile that needs to be amended\n        const profile = state.find((user) => {\n          return user.user === action.payload.profileId;\n        });\n        let profileCopy = {};\n        // Create the comment object for that user, if it doesn't exist\n        if(profile === undefined) {\n          profileCopy = {\n            user: action.payload.profileId,\n            posts: []\n          }\n          profileCopy.posts = [];\n          profileCopy.posts = profileCopy.posts.concat ({\n            id: Math.floor((Math.random() * 1000000) + 1),\n            poster: action.payload.posterId,\n            post: action.payload.comment\n          })\n        }\n        // If the comment object for the user exists, amend it\n        else {\n          // Copy comments of profile found to avoid mutation\n          profileCopy = Object.assign({}, profile);\n          // Create new id for comment (Would be done via database), and populate data, create new ref so it's not using reference to profile.\n          profileCopy.posts = profile.posts.concat({\n            id: Math.floor((Math.random() * 1000000) + 1),\n            poster: action.payload.posterId,\n            post: action.payload.comment\n          })\n        }\n\n        // Create new state array, without the comments that need to be amended\n        let newState = state.filter((obj) => {\n          return obj.user !== action.payload.profileId;\n        });\n\n        // Add the new comment to the newState\n        newState = newState.concat(profileCopy);\n\n        // Return the new state\n        return newState;\n      }\n      case 'DELETE_COMMENT': {\n        const origCommentsArray = state\n\n        const updatedCommentsArray = origCommentsArray.reduce((acc, obj) => {\n          let updatedObj = obj\n\n          updatedObj.posts = obj.posts.filter(post => {\n            return post.id !== action.payload.commentId\n          })\n\n          acc.push(updatedObj)\n          return acc\n        }, [])\n\n        return updatedCommentsArray;\n      }\n    }\n  return state;\n}\n","import { createStore, applyMiddleware } from 'redux';\n// thunk allows multiple actions to be run together\nimport thunk from 'redux-thunk';\n\n// import the combined reducers from ./reducers/index.js\nimport reducer from './reducers';\nimport { loadState, saveState } from './localStorage';\n\n// Get existing state from localStorage\nconst persistedState = loadState();\n\n// Create Store with data\nconst store = createStore(\n  reducer,\n  persistedState,\n  applyMiddleware(thunk)\n);\n\n// Listen for any changes to the state and update localStorage\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('socialReduxState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('socialReduxState', serializedState);\n  } catch (err) {\n    console.log('Error has occurred: ', err);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './containers/App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}